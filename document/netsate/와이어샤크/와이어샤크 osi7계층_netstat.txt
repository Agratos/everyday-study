패킷을 잡을때 가장 먼저 확인할수 있는 데이터로
Destination, Source MAC Address가 존재

L2 Datat Link Ethernet
ethertype 은 2 byte로 L3에 무엇이 나올지 지정해주는데 현재 Type은 IPv4
IPv6 : 0x8100
ARP : 0x0806 : Address Resolution Protocol
	IP주소를 MAC 주소를 일대일 대응하여 테이블로 정리하고 목적지 
	IP에 맞는 목적지 MAC 주소로 전달
	ARP Table : IP 주소와 MAC 주소를 일대일 매칭시킨 정보를 정리해둔 Table


L3 Network Ipv4
Ethernet Frame Header에서 ethertype명시된 프로토콜만 올수 있다.
Ipv4 : Source Address 4byte
        Destination Address 4byte
        Protocol 1byte

ICMP 1, UDP 17, TCP 6

Ethernet Header과 마찬가지로 다음에 어떤 프로토콜이 올지 정해주는게 바로 Protocol


L4 Transport TCP
L4 에서는 L7과 L3을 연결하고 신뢰성, 흐름제어, 다중화와 같은 서비스를 제공하는것

TCP Header
Source Port, Destination Port / Port로 서비스를 구분하는 패턴이 자주 사용
실질적인 데이터는 Payload


L7 Session + Presentation + Application 의 HTTP
L7에 해당하는 프로토콜로 이전 PDU인 TCP에서 Payload에 존재하는 실질적인 데이터
TCP 에서 어떤 Payload가 되었느냐에 따라서 FTP SHH가 될수 있다.




======================================================
netstat : 전송제어프로토콜, 라우팅 테이블, 수많은 네트워크인터페이스,
           네트워크프로토콜 통계를 위한 네트워크 연결을 보여주는 명령어

전송제어프로토콜 TCP/IP : 프로그램 간에 일련의 옥텟을 안정적으로 순서대로 에러없이 교환
옥텟 : Octet 8비트의 배열을 의미 1바이트랑 같다 모든 컴퓨터 시스템이 8비트를 1바이트로 사용하지 않기 때문에
8비트 한셋을 일컫는 분명한 의미 제공을 위해 옥텟이라는 용어 사용
8비트로 된 일련의 데이터


CLOSED : 끊어진 상태
CLOSING : 흔하지 않으나 주로 확인 메시지가 전송 도중 유실된 상태
CLOSE_WAIT : TCP 연결이 상위 응용프로그램 레벨로부터 연결 종료를 기달리는 상태
	      Passive Close 하는 쪽에서 프로그램이 소켓을 종료시키는것을 기달리기위한 상태
	      소켓 프로그래밍시 TCP connection을 close 함수로 명시적으로 끊어주지않으면
	      CLOSE_WAIT상태로 영원히 남을수 있고 이는 resource leak으로 이어짐
ESTABLISHED : 연결되어 있는 상태
FIN_WAIT1 : 클라이언트가 섭에게 연결을 끊고자 요청하는 상태(FIN을 보낸 상태)
	    FIN - Finish의 약자 : 세션 연결을 종료시킬때 사용되며 더이상 전송할 데이터가 없음을 나타낸다.
FIN_WAIT2 : 서버가 클라이언트로부터 연결 종료 응답을 기다리는 상태
	    서버가 클라이언트로부터 최초로 FIN을 받은후 클라이언트에게  ACK을 주었을때
LAST_ACK : 호스트가 원격지 호스트의 연결 종료 요구 승인을 기다리는 상태
               서버가 클라이언트에게 FIN을 보냈을 때의 상태
LISTENING : 시스템이 열려있는 포트 / 서버의 데몬이 떠 있어서 클라이언트의 접속 요청을 기다리고 있는상태
	    LISTEN : 리눅스
SYN_SENT : 클라이언트가 서버에게 연결을 요청한 상태
STN_RECEIVED : 서버가 클라이언트로부터 접속 요구 (SYN)을 받아 클라이언트에게 응답(SYN/ACK)을 하였지만
                    아직 클라이언트에게 확인 메시지(ACK)는 받지 못한 상태
TIEM_WAIT : 연결은 종결되었지만 (분실되었을지 모를 느린 세그먼트를 위해) 당분간 소켓을 열어놓은상태
	     기본값은 120초.  Active Close 하는 쪽의 마지막 ACK가 유실되었을때, Passive Close 하는
 	     쪽은 자신이 보낸 FIN에 대한 응답을 받지 못했으므로 FIN을 재선송함 이때 TCP는 connection
	     정보를 유지하고 있고  ACK를 다시 보낼 수 있다.

* TCP Flag
SYN : Synchronization 세션을 결졍하는데 사용되며 초기에 시퀀스 번호를 임의로 생성하여 보냄 
        100%는 아니지만 대부분 클라이언트 측에서 보내는 flag
ACK : Acknowledgemnt 받는 사람이 보낸 사람 시퀀스 번호에 TCP 계층에서 길이 또는 데이터 양을 더한
       것과 같은 ACK을 보냄
       ACK의 번호와 응답을 통해 보낸 패킷에 대한 손실을 판다하여 재전송하거나 다음 패킷을 전송
FIN : Finish 세션을 종료시키는 데 사용되며 보낸사람이 더이상 보낼 데이터가 없음을 보여줌
RST : Reset 재설정을 하는 과정이며 양뱡향에서 동시에 일어나는 중단 작업, 비정상적인 세션 연결 끊기 해당
PSH : Push 대화형 트래픽에서 사용되며 버퍼가 채워지기를 기다리지 않고 데이터를 전달. 데이터는 버퍼링 없이
        바로 위 Layer가 아닌 7Layer의 응용프로그램으로 바로 전달
URG : Urgent, Urgent pointer가 유효한것인지를 나타냄
        Urgent pointer란 전송하는 데이터 중에서 긴급히 전달해야 할 내용이 있을 경우에 사용

Flag 순서



모드 
Active Open : connect() 를 호출하는 쪽 / SYN 세그먼트를 전송한 쪽, 종종 클라이언트가 되지만 100는아님
Passive Open : accept()를 호출하는쪽  / 서버라고 단정 지을수 없음 대부분 서버의 역할
Active Close : close를 처음 호출한 쪽 FIN세그먼트를 전송한 쪽 클라이언트 서버 관계없이 어느쪽이든 가능
Passive Close : FIN 세그먼트를 받는 쪽
MSL Maximum Segment Lifetime 세그먼트가 네트워크 내에서 폐기되기 전까지 살아남을수 있는 시간


=======================================================================
















